server {
    listen 80;
    server_name petprotector.ru www.petprotector.ru;

    # Редирект с HTTP на HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name petprotector.ru www.petprotector.ru;

    # Пути к вашему SSL сертификату и ключу
    ssl_certificate /etc/ssl/certs/petprotector.ru.crt;
    ssl_certificate_key /etc/ssl/private/petprotector.ru.key;

    # Настройки безопасности для SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Путь к скомпилированным Vite-файлам
    root /usr/share/nginx/html;
    index index.html;

    # Карта для проверки допустимых доменов
    map $http_origin $cors_origin {
        default "";
        "https://petprotector.ru" $http_origin;
        "https://www.petprotector.ru" $http_origin;
    }

    location / {
        try_files $uri /index.html;  # Для поддержки React Router
    }

    location /api/ {
        proxy_pass http://backend:80;  # Прокси на бэкенд внутри сети Docker

        # Прокси-заголовки
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS-заголовки только для разрешённых доменов
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';

        # Разрешаем предварительные OPTIONS-запросы
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' text/plain;
            return 204;
        }
    }

    location /static/ {
        alias /usr/share/nginx/html/static/;
    }

    error_page 404 /index.html;  # Для корректной работы с React Router
}
